<script>
    document.addEventListener('DOMContentLoaded', function () {
        const updateTotals = () => {
            let cartTotal = 0;
            const cartItems = document.querySelectorAll('.cart-item');

            cartItems.forEach(item => {
                // Get price, handle potential null or invalid values
                const priceElement = item.querySelector('.current-price');
                if (!priceElement) return;
                const priceText = priceElement.textContent.replace('$', '').trim();
                const price = parseFloat(priceText);
                if (isNaN(price)) return;

                // Get quantity, handle potential null or invalid values
                const quantityInput = item.querySelector('.quantity-input');
                if (!quantityInput) return;
                const quantity = parseInt(quantityInput.value, 10);
                if (isNaN(quantity)) return;

                // Calculate item total
                const itemTotal = price * quantity;

                // Update item total display
                const itemTotalElement = item.querySelector('.item-total span');
                if (itemTotalElement) {
                    itemTotalElement.textContent = `$${itemTotal.toFixed(2)}`;
                }

                // Add to cart total
                cartTotal += itemTotal;
            });

            // Update grand total
            const grandTotalElement = document.querySelector('#cart-grand-total');
            if (grandTotalElement) {
                grandTotalElement.textContent = `$${cartTotal.toFixed(2)}`;
            }

            // Show/hide cart items container or display empty message
            const cartItemsContainer = document.querySelector('.cart-items');
            if (cartItemsContainer) {
                if (cartItems.length === 0) {
                    cartItemsContainer.innerHTML = '<p class="text-center">Your cart is empty.</p>';
                }
            }

            // Show/hide cart actions
            const cartActions = document.querySelector('.cart-actions');
            if (cartActions) {
                cartActions.style.display = cartItems.length > 0 ? 'block' : 'none';
            }
        };

        // Handle + and - buttons
        document.querySelectorAll('.quantity-btn').forEach(button => {
            button.addEventListener('click', function () {
                const quantitySelector = this.closest('.quantity-selector');
                const input = quantitySelector.querySelector('.quantity-input');
                if (!input) return;

                let quantity = parseInt(input.value, 10);
                if (isNaN(quantity)) quantity = 1;

                // if (this.classList.contains('increase') && quantity < 10) {
                //     // quantity += 1;
                // } else if (this.classList.contains('decrease') && quantity > 1) {
                //     // quantity -= 1;
                // }

                input.value = quantity;
                updateTotals();
            });
        });

        // Handle manual input changes
        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('change', function () {
                let quantity = parseInt(this.value, 10);
                if (isNaN(quantity) || quantity < 1) {
                    quantity = 1;
                } else if (quantity > 10) {
                    quantity = 10;
                }
                this.value = quantity;
                updateTotals();
            });
        });

        // Handle remove item buttons
        document.querySelectorAll('.remove-item').forEach(button => {
            button.addEventListener('click', function () {
                const cartItem = this.closest('.cart-item');
                if (cartItem) {
                    cartItem.remove();
                    updateTotals();
                }
            });
        });

        // Handle clear cart button
        const clearCartButton = document.querySelector('.btn-outline-remove');
        if (clearCartButton) {
            clearCartButton.addEventListener('click', function () {
                document.querySelectorAll('.cart-item').forEach(item => item.remove());
                updateTotals();
            });
        }

        // Handle update cart button
        const updateCartButton = document.querySelector('.btn-outline-heading');
        if (updateCartButton) {
            updateCartButton.addEventListener('click', function () {
                updateTotals();
            });
        }

        // Initial total calculation on page load
        updateTotals();
    });
</script>

{% for order in orders %}
    <div class="cart-item">
        <div class="row align-items-center">
            <div class="col-lg-6 col-12 mt-3 mt-lg-0 mb-lg-0 mb-3">
                <div class="product-info d-flex align-items-center">
                    <div class="product-image">
                        <img src="{{ asset(order.image) }}" alt="Product" class="img-fluid" loading="lazy">
                    </div>
                    <div class="product-details">
                        <h6 class="product-title">{{ order.title }}</h6>
                        <div class="product-meta">
                            <span class="product-color">Color: {{ order.color }}</span>
                            <span class="product-size">Size: {{ order.size }}</span>
                        </div>
                        <button class="remove-item" type="button">
                            <i class="bi bi-trash"></i> Remove
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-lg-2 col-12 mt-3 mt-lg-0 text-center">
                <div class="price-tag">
                    <span class="current-price">${{ '%.2f'|format(order.unit_price) }}</span>
                    {% if order.original_price %}
                        <span class="original-price">${{ '%.2f'|format(order.original_price) }}</span>
                    {% endif %}
                </div>
            </div>
            <div class="col-lg-2 col-12 mt-3 mt-lg-0 text-center">
                <div class="quantity-selector">
                    <button class="quantity-btn decrease">
                        <i class="bi bi-dash"></i>
                    </button>
                    <input type="number" class="quantity-input" value="{{ order.quantity }}" min="1" max="10">
                    <button class="quantity-btn increase">
                        <i class="bi bi-plus"></i>
                    </button>
                </div>
            </div>
            <div class="col-lg-2 col-12 mt-3 mt-lg-0 text-center">
                <div class="item-total">
                    <span>${{ '%.2f'|format(order.unit_price * order.quantity) }}</span>
                </div>
            </div>
        </div>
    </div>
{% endfor %}