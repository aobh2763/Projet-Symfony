<script>
    document.addEventListener('DOMContentLoaded', function () {
        const updateTotals = () => {
            let cartTotal = 0;
            const cartItems = document.querySelectorAll('.cart-item');

            cartItems.forEach(item => {
                // Get price, handle potential null or invalid values
                const priceElement = item.querySelector('.current-price');
                if (!priceElement) return;
                const priceText = priceElement.textContent.replace(' TND', '').trim();
                const price = parseFloat(priceText);
                if (isNaN(price)) return;

                // Get quantity, handle potential null or invalid values
                const quantityInput = item.querySelector('.quantity-input');
                if (!quantityInput) return;
                const quantity = parseInt(quantityInput.value, 10);
                if (isNaN(quantity)) return;

                // Calculate item total
                const itemTotal = price * quantity;

                // Update item total display
                const itemTotalElement = item.querySelector('.item-total span');
                if (itemTotalElement) {
                    itemTotalElement.textContent = `${itemTotal.toFixed(2)} TND`;
                }

                // Add to cart total
                cartTotal += itemTotal;
            });

            // Update grand total
            const grandTotalElement = document.querySelector('#cart-grand-total');
            if (grandTotalElement) {
                grandTotalElement.textContent = `${cartTotal.toFixed(2)} TND`;
            }

            // Show/hide cart items container or display empty message
            const cartItemsContainer = document.querySelector('.cart-items');
            if (cartItemsContainer) {
                if (cartItems.length === 0) {
                    cartItemsContainer.innerHTML = '<p class="text-center">Your cart is empty.</p>';
                }
            }

            // Show/hide cart actions
            const cartActions = document.querySelector('.cart-actions');
            if (cartActions) {
                cartActions.style.display = cartItems.length > 0 ? 'block' : 'none';
            }
        };

        // Handle + and - buttons
        document.querySelectorAll('.quantity-btn').forEach(button => {
            button.addEventListener('click', function () {
                const quantitySelector = this.closest('.quantity-selector');
                const input = quantitySelector.querySelector('.quantity-input');
                if (!input) return;

                let quantity = parseInt(input.value, 10);
                if (isNaN(quantity)) quantity = 1;

                // if (this.classList.contains('increase') && quantity < 100) {
                //     quantity += 1;
                // } else if (this.classList.contains('decrease') && quantity > 1) {
                //     quantity -= 1;
                // }

                input.value = quantity;
                updateTotals();
            });
        });

        // Handle manual input changes
        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('change', function () {
                let quantity = parseInt(this.value, 10);
                if (isNaN(quantity) || quantity < 1) {
                    quantity = 1;
                } else if (quantity > 100) {
                    quantity = 100;
                }
                this.value = quantity;
                updateTotals();
            });
        });

        // Handle remove item buttons (server-side, no client-side removal)
        document.querySelectorAll('.remove-item').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                if (confirm('Are you sure you want to remove this item?')) {
                    window.location.href = this.getAttribute('href');
                }
            });
        });

        // Handle update cart button
        const updateCartButton = document.querySelector('.btn-outline-heading');
        if (updateCartButton) {
            updateCartButton.addEventListener('click', function (e) {
                e.preventDefault();
                updateTotals();
                document.getElementById('cart-form').submit();
            });
        }

        // Initial total calculation on page load
        updateTotals();
    });
</script>

{% if orders is empty %}
    <p class="text-center">Your cart is empty.</p>
{% else %}
    <form id="cart-form" action="{{ path('app_user_cart_update') }}" method="POST">
        {% for order in orders %}
            {% set product = order.getProduct() %}
            <div class="cart-item">
                <div class="row align-items-center">
                    <div class="col-lg-6 col-12 mt-3 mt-lg-0 mb-lg-0 mb-3">
                        <div class="product-info d-flex align-items-center">
                            <div class="product-image">
                                <img src="{{ asset(product.image) }}" alt="Product" class="img-fluid" loading="lazy">
                            </div>
                            <div class="product-details">
                                <h6 class="product-title">{{ product.name }}</h6>
                                <div class="product-meta">
                                    <span class="product-color">Weight: {{ product.weight }}</span>
                                    <span class="product-size">Rating: {{ product.rating }}</span>
                                </div>
                                <a href="{{ path('app_user_cart_remove', {'pid': product.id}) }}" class="remove-item">
                                    <i class="bi bi-trash"></i> Remove
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-2 col-12 mt-3 mt-lg-0 text-center">
                        <div class="price-tag">
                            <span class="current-price">{{ '%.2f'|format(product.price - product.sale * product.price) }} TND</span>
                            {% if product.sale > 0 %}
                                <span class="original-price">{{ '%.2f'|format(product.price) }} TND</span>
                            {% endif %}
                        </div>
                    </div>
                    <div class="col-lg-2 col-12 mt-3 mt-lg-0 text-center">
                        <div class="quantity-selector">
                            <button id="minus_quantity{{ product.id }}" type="button" class="quantity-btn decrease">
                                <i class="bi bi-dash"></i>
                            </button>
                            <input id="quantity_field{{ product.id }}" type="number" name="quantities[{{ order.id }}]" class="quantity-input" value="{{ order.quantity }}" min="1" max="100" data-order-id="{{ order.id }}" disabled>
                            <input type="hidden" name="order_ids[]" value="{{ order.id }}">
                            <button id="plus_quantity{{ product.id }}" type="button" class="quantity-btn increase">
                                <i class="bi bi-plus"></i>
                            </button>
                        </div>

                <script>
                    const quantityAdder{{ product.id }} = document.getElementById('plus_quantity{{ product.id }}');
                    const quantityField{{ product.id }} = document.getElementById('quantity_field{{ product.id }}');
                    const quantityRemover{{ product.id }} = document.getElementById('minus_quantity{{ product.id }}');

                    quantityAdder{{ product.id }}.addEventListener('click', function () {
                        let currentQuantity = parseInt(quantityField{{ product.id }}.value, 10);
                        if (isNaN(currentQuantity) || currentQuantity < 1) {
                            currentQuantity = 1;
                            console.log("oops");
                        } else {
                            window.location.href = "{{ path('app_user_cart_add', {'pid': product.id}) }}";
                        }
                    });

                    quantityRemover{{ product.id }}.addEventListener('click', function () {
                        let currentQuantity = parseInt(quantityField{{ product.id }}.value, 10);
                        if (isNaN(currentQuantity) || currentQuantity <= 1) {
                            currentQuantity = 1;
                        } else {
                            window.location.href = "{{ path('app_user_cart_add', {'pid': product.id, 'qte': -1}) }}";
                        }
                    });
                </script>
                    </div>
                    <div class="col-lg-2 col-12 mt-3 mt-lg-0 text-center">
                        <div class="item-total">
                            <span>{{ '%.2f'|format((product.price - product.sale * product.price) * order.quantity) }} TND</span>
                        </div>
                    </div>
                </div>
            </div>
        {% endfor %}
        <div class="cart-actions mt-3">
            <button type="submit" class="btn btn-outline-primary btn-outline-heading">Update Cart</button>
        </div>
    </form>
{% endif %}